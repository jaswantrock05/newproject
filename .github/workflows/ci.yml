# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  paths:
      - 'src/**/VERSION'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Log into registry
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY_URL }} -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build and push the images
      run: |
        for versionFilePath in $(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} ${{ github.event.before }} | grep "VERSION");
        do
          folder=${versionFilePath%"/VERSION"}
          IMAGE_NAME=${folder##*/}

          tmpName="image-$RANDOM"
          docker build $folder --file $folder/Dockerfile --tag $tmpName
          IMAGE_ID=${{ secrets.DOCKER_REGISTRY_URL }}/${{ secrets.REPOSITORY }}/$IMAGE_NAME
          VERSION=$(cat $versionFilePath)

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $tmpName $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
        done;
